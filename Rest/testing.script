#Here we can paste small parts of the code and test them


var startpoint = p[0.1559,-0.4109,0.1977,1.2879,-2.641,0.4935]                           #Starting Position
var waypoint_1 = p[-1.0552,-0.6412,0.2091,-0.3620,-3.112,0.622]                          #Position of box number 1
var waypoint_2 = p[-1.2242,-0.1807,0.1587,0.9690,2.967,-0.0392]                          #Position of box number 2
var waypoint_3 = p[-1.0765,0.6216,0.1525,1.8989,2.496,-0.0476]                           #Position of box number 3
var table_position = p[-0.4474,-0.7234,0.2613,-0.2796,3.129,-0.0219]                     #Position of the table
var precised_table_position = p[0.1796,-0.6869,0.1305,-1.4154,2.755,0.1192]
var dropoff_positionA = p[1.0610,-0.6817,0.1624,-2.4354,1.941,-0.0209]                    #Position of the drop off zone
var dropoff_positionB = p[1.2027,0.1867,0.1477,-2.9589,0.957,-0.0194]                    #Position of the drop off zone
var dropoff_positionC = p[0.1559,-0.4109,0.1977,1.2878,-2.641,0.4935]                    #Position of the drop off zone


moveToRest()

moveToPickUpZone(1)

#5. Pick up frame (from first fixed point, then move with a loop to the next x amount)


#6. Move to working zone (The glueing area)
moveToGlueZone()

#7.a Drop the frame in the right position (where the piston will hold it down, dont let go yet)

#7.b The pistons will hold it down

#Go to function which does the glue part of the frame A
glue_frameA()

#Pick up from the table
PickUp()

#10. Move the frame to the drop-off zone
moveToDropZone(1)
end



def moveToRest():
  # Move to Resting Position
  movej(startpoint)
end


def moveToPickUpZone(zone):
  # Move to Resting Position
  if (zone == 1):
    # Move to PickUp Zone A
      movej(waypoint_1)
      sleep(1)
      waypoint_A = pose_add(waypoint_1, p[0,0,-1,0,0,0])      #Position of frame in box number 1
      movel(waypoint_A, a=1.0, v=0.1)

  elif zone == 2:
    # Move to PickUp Zone B
      movej(waypoint_2)
      sleep(1)
      waypoint_B = pose_add(waypoint_2, p[0,0,-1,0,0,0])      #Position of frame in box number 1
      movel(waypoint_B, a=1.0, v=0.1)
  elif zone == 3:
    # Move to PickUp Zone C
      movej(waypoint_3)
      sleep(1)
      waypoint_C = pose_add(waypoint_3, p[0,0,-1,0,0,0])      #Position of frame in box number 1
      movel(waypoint_C, a=1.0, v=0.1)
  end
end

def moveToGlueZone(safe):
  if safe:
    movej(table_position)
    sleep(1)
   movel(precise_table_position, a=1.0, v=0.1)
  
end

def moveToDropZone(zone):
  # Move to Resting Position
  if zone == 1:

    # Move to PickUp Zone A 
      movej(dropoff_positionA)                                        #Go to drop off position A
      sleep(1)
      waypoint_DA = pose_add(dropoff_positionA, p[0,0,-1,0,0,0])      #Position of frame in box number 1
      movel(waypoint_DA, a=1.0, v=0.1)
      #Drop off the frame
      

  elif zone == 2:
    # Move to PickUp Zone B
      movej(dropoff_positionB)                                        #Go to drop off position A
      sleep(1)
      waypoint_DB = pose_add(dropoff_positionB, p[0,0,-1,0,0,0])      #Position of frame in box number 1
      movel(waypoint_DB, a=1.0, v=0.1)
      #Drop off the frame
      
  elif zone == 3:
    # Move to PickUp Zone C 
      movej(dropoff_positionC)                                        #Go to drop off position A
      sleep(1)
      waypoint_DA = pose_add(dropoff_positionC, p[0,0,-1,0,0,0])      #Position of frame in box number 1
      movel(waypoint_DC, a=1.0, v=0.1)
      #Drop off the frame
      
    return
end

def PickUp():

   movej(startpoint)                                                 #Go back to the starting point
   movej(table_position)		                                       #Go to pick up position
   sleep(1)
   movej(precise_table_position, a=1.0, v=0.1)
   #Pick up the frame
   
end

def glue_frameA():
   
    #GLUING PART OF FRAME A

    #8. Move out of frame (Away for the camera for it to scan properly)
    movel(startpoint, a=1.0, v=0.1)
    
    #Create the four waypoints
    corner_1 =  p[-0.1077,-0.9523,0.2045,-0.9940,2.976,0.0733]   #These must be the coordinates of the first corner          #is it OK this format?
    corner_2 =  p[0.1713,-0.5674,0.2054,-1.4202,2.781,0.1424]     #These must be the coordinates of the second corner
    corner_3 =  p[0.1674,-0.9423,0.1774,1.3825,-2.753,0.1015]     #These must be the coordinates of the third corner
    corner_4 =  p[-0.1296,-0.5551,0.1787,-0.6328,3.041,0.1192]     #These must be the coordinates of the fourth corner

    #Move to the 4 waypoints while gluing (the corners must not be glued)

    movel(corner_1, a=1.0, v=0.1)

    #Start Gluing
    #wait(the corners must not be glued)            #these three tasks have to be done while moving to the second corner!
    #Stop Glue
    movel(corner_2, a=1.0, v=0.1)

    #Start Gluing
    #wait(the corners must not be glued)            #these three tasks have to be done while moving to the third corner!
    #Stop Glue
    movel(corner_3, a=1.0, v=0.1)

    #Start Gluing 
    #wait(the corners must not be glued)            #these three tasks have to be done while moving to the fourth corner!    
    #Stop Glue
    movel(corner_4, a=1.0, v=0.1)

   

end

