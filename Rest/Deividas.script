Program
   BeforeStart
     open = socket_open("127.0.0.1",21)
     Loop open = False
       open = socket_open("127.0.0.1",21)
     targetPos = p[0,0,0,0,0,0]
     counter = 0
   Robot Program
     sendToServer = 'send to server'
     socket_send_string(sendToServer)
     receiveFromServ = socket_read_ascii_float(6)
     Loop receiveFromServ[0] = 6
       Wait: 0.3
       receiveFromServ = socket_read_ascii_float(6)
     Loop counter<6
       targetPos[counter]=receiveFromServ[counter+1]
       counter = counter+1
     MoveJ
       targetPos
     counter:=0

p[0.1605,-0.4731,0.5849,1.1925,-2.396,0.9324]



#Get position
textmsg("Location:", get_actual_tcp_pose())
sleep(1000)


#Paste code here:
rest_point = p[0.1559,-0.4109,0.1977,1.2879,-2.641,0.4935]                                                  #Rest position(in the back)
waypoint_A = p[-1.0552,-0.6412,0.2091,-0.3620,-3.112,0.622]                                                 #Position of box number A
betweenpoint_A = p[-0.4476,-0.7235,0.2620,0.2795,-3.128,0.0232]
waypoint_B = p[-1.2242,-0.1807,0.1587,0.9690,2.967,-0.0392]	                                                #Position of box number B
waypoint_C = p[-1.0765,0.6216,0.1525,1.8989,2.496,-0.0476]                                                  #Position of box number C
table_position = p[0.1575,-0.6664,0.1483,-1.3766,2.800,-0.0169]                                             #Position of the table(glueing)
glue_zone = p[-0.4474,-0.7234,0.2613,-0.2796,3.129,-0.0219]                                 
betweenpoint_B = p[0.5813,-0.6072,0.4599,1.8775,-1.989,1.3114]
droppoint_A = p[1.0610,-0.6817,0.1624,-2.4354,1.941,-0.0209]                                                #Position of dropzone A
droppoint_B = p[1.2027,0.1867,0.1477,-2.9589,0.957,-0.0194]                                                 #Position of dropzone B
droppoint_C = p[1.0696,0.7331,0.1378,-3.1145,0.265,0.0414]                                                  #Position of dropzone C

def moveToRest():
  # Move to Resting Position
  movej(rest_point)
  
end

def moveToPickUpZone(zone):
  # Move to Resting Position
  if (zone == 1):
    # Move to PickUp Zone A
    movej(waypoint_A)
  elif zone == 2:
    # Move to PickUp Zone B
    movej(waypoint_B)
  elif zone == 3:
    # Move to PickUp Zone C
    movej(waypoint_C)
  end
end


def moveToGlueZone(safe):
  if safe:
    movej(glue_zone)
    sleep(3)
  movej(table_position)
  return
end


def moveToDropZone(zone):
  # Move to Resting Position
  if zone == 1:
    # Move to PickUp Zone A
    movej(droppoint_A)
  elif zone == 2:
    # Move to PickUp Zone B
    movej(droppoint_B)
  elif zone == 3:
    # Move to PickUp Zone C
    movej(droppoint_C)
    return
end


def movetoSafeZonePickup():
  # Move to Safezone on the pickup side
    movej(betweenpoint_A)
    return
end

def movetoSafeZonePlaceDown():
  # Move to Safezone on the placedown side
    movej(betweenpoint_B)
    return
end



# Begin
moveToRest()
sleep(4)

movetoSafeZonePickup()
sleep(4)

moveToPickUpZone(1)
sleep(4)

movetoSafeZonePickup()
sleep(4)

moveToGlueZone()

movetoSafeZonePickup()
sleep(4)

moveToPickUpZone(2)
sleep(4)

movetoSafeZonePickup()
sleep(4)

moveToPickUpZone(3)
sleep(2)

movetoSafeZonePickup()
sleep(4)

moveToGlueZone()

halt



##############################################################################################


rest_point = p[0.1559,-0.4109,0.1977,1.2879,-2.641,0.4935]                                                  #Rest position(in the back)
waypoint_A = p[-1.0552,-0.6412,0.2091,-0.3620,-3.112,0.622]                                                 #Position of box number A
betweenpoint_A = p[-0.4476,-0.7235,0.2620,0.2795,-3.128,0.0232]
waypoint_B = p[-1.2242,-0.1807,0.1587,0.9690,2.967,-0.0392]	                                                #Position of box number B
waypoint_C = p[-1.0765,0.6216,0.1525,1.8989,2.496,-0.0476]                                                  #Position of box number C
table_position = p[0.1575,-0.6664,0.1483,-1.3766,2.800,-0.0169]                                             #Position of the table(glueing)
glue_zone = p[-0.4474,-0.7234,0.2613,-0.2796,3.129,-0.0219]                                 
betweenpoint_B = p[0.5813,-0.6072,0.4599,1.8775,-1.989,1.3114]
droppoint_A = p[1.0610,-0.6817,0.1624,-2.4354,1.941,-0.0209]                                                #Position of dropzone A
droppoint_B = p[1.2027,0.1867,0.1477,-2.9589,0.957,-0.0194]                                                 #Position of dropzone B
droppoint_C = p[1.0696,0.7331,0.1378,-3.1145,0.265,0.0414]                                                  #Position of dropzone C

def moveToRest():
# Move to Resting Position
movej(rest_point)
end

def moveToPickUpZone(zone):
  # Move to Resting Position
    if zone == 1:
    # Move to PickUp Zone A
        movej(waypoint_A)
     elif zone == 2:
    # Move to PickUp Zone B
        movej(waypoint_B)
     elif zone == 3:
    # Move to PickUp Zone C
        movej(waypoint_C)
    end
end


def moveToDropZone(zone):
  # Move to Resting Position
    if zone == 1:
    # Move to PickUp Zone A
        movej(droppoint_A)
      elif zone == 2:
  # Move to PickUp Zone B
        movej(droppoint_B)
      elif zone == 3:
   # Move to PickUp Zone C
        movej(droppoint_C)
    end
end

def moveToSafeZonePickup():
# Move to Safezone on the pickup side
movej(betweenpoint_A)
end

def moveToGlueZone(safe):
  if safe:
    movej(glue_zone)
    sleep(3)
  end
  movej(table_position)
end

def movetoSafeZonePlaceDown():
  # Move to Safezone on the placedown side
    movej(betweenpoint_B)
end





# Begin
moveToRest()
sleep(4)

moveToSafeZonePickup()
sleep(4)

moveToPickUpZone(1)
sleep(4)

moveToSafeZonePickup()
sleep(4)

moveToGlueZone(True)
sleep(3)

movetoSafeZonePlaceDown()
sleep(2)

moveToDropZone(1)
sleep(3)


moveToRest()
sleep(4)

halt

##############################################################################################
rest_point = p[0.1559,-0.4109,0.1977,1.2879,-2.641,0.4935]                                                  #Rest position(in the back)
waypoint_A = p[-0.8003,-0.7149,0.5402,-0.1061,-3.134,0.0618]                                                 #Position of box number A
betweenpoint_A = p[-0.6973,-0.1471,0.6629,-1.0176,-2.936,0.0326]
waypoint_B = p[-0.9015,-0.1910,0.5035,-0.9213,-2.906,0.0945]	                                                #Position of box number B
waypoint_C = p[-0.8927,0.6031,0.6909,-2.0117,-2.393,0.1814]                                                  #Position of box number C
table_position = p[0.1575,-0.6664,0.1483,-1.3766,2.800,-0.0169]                                             #Position of the table(glueing)
glue_zone = p[0.1605,-0.4731,0.5849,1.1925,-2.396,0.9324]                                 
betweenpoint_B = p[0.7095,0.1309,0.6572,-2.9386,1.056,-0.0416]
droppoint_A = p[1.0610,-0.6817,0.1624,-2.4354,1.941,-0.0209]                                                #Position of dropzone A
droppoint_B = p[1.2027,0.1867,0.1477,-2.9589,0.957,-0.0194]                                                 #Position of dropzone B
droppoint_C = p[1.0696,0.7331,0.1378,-3.1145,0.265,0.0414]                                                  #Position of dropzone C

def moveToRest():
# Move to Resting Position
movej(rest_point)
end

def moveToPickUpZone(zone):
  # Move to Resting Position
    if zone == 1:
    # Move to PickUp Zone A
        movej(waypoint_A)
     elif zone == 2:
    # Move to PickUp Zone B
        movej(waypoint_B)
     elif zone == 3:
    # Move to PickUp Zone C
        movej(waypoint_C)
    end
end


def moveToDropZone(zone):
  # Move to Resting Position
    if zone == 1:
    # Move to PickUp Zone A
        movej(droppoint_A)
      elif zone == 2:
  # Move to PickUp Zone B
        movej(droppoint_B)
      elif zone == 3:
   # Move to PickUp Zone C
        movej(droppoint_C)
    end
end

def moveToSafeZonePickup():
# Move to Safezone on the pickup side
movej(betweenpoint_A)
end

def moveToGlueZone(safe):
  if safe:
    movej(glue_zone)
    sleep(3)
  end
  movej(table_position)
end

def movetoSafeZonePlaceDown():
  # Move to Safezone on the placedown side
    movej(betweenpoint_B)
end





# Begin

# First cycle (A)

moveToRest()
sleep(1)

moveToSafeZonePickup()
sleep(1)

moveToPickUpZone(1)
sleep(1)

moveToSafeZonePickup()
sleep(1)

moveToGlueZone(True)
sleep(1)

movetoSafeZonePlaceDown()
sleep(1)

moveToDropZone(1)
sleep(1)

movetoSafeZonePlaceDown()
sleep(1)

# Second cycle (B)

moveToSafeZonePickup()
sleep(1)

moveToPickUpZone(2)
sleep(1)

moveToSafeZonePickup()
sleep(1)

moveToGlueZone(True)
sleep(1)

movetoSafeZonePlaceDown()
sleep(1)

moveToDropZone(2)
sleep(1)

movetoSafeZonePlaceDown()
sleep(1)

#Third cycle (3)

moveToSafeZonePickup()
sleep(1)

moveToPickUpZone(3)
sleep(1)

moveToSafeZonePickup()
sleep(1)

moveToGlueZone(True)
sleep(1)

movetoSafeZonePlaceDown()
sleep(1)

moveToDropZone(3)
sleep(1)

moveToRest()
sleep(1)

halt